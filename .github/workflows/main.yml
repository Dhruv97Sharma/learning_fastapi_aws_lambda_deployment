name: FastAPI AWS Lambda CI/CD

on:
  # Trigger the workflow on push
  push:
    branches:
      # Push events on the main branch
      - main

# The job defines a series of steps that execute on the same runner.
jobs:

  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:
    # Checks out repo so our workflow can access it
      - uses: actions/checkout@v2

      # Step - 1 Setup Python
      - name: Setup Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          
      # Step - 2 Intall Python virtual env
      - name: Install Python Virtual env
        run: pip3 install virtualenv
      
      # Step - 3 Setup Virtual env
      - name: Virtual env
        uses: actions/cache@v2
        id: cachce-env # for referring name of the caceh later
        with:
          path: venv # What we actually cached: The virtual env file
          # This cache key depends on the requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**requirements*.txt') }}
          restore-keys: /
            ${{ runner.os }}-venv-

      # Step - 4 Build a Virtual env, but only if it doesn't already exists
      - name: Activate Virtual env
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-env.output.cache-hit != 'true'

      - name: Run Tests
        # Note that you have to activate the virtualenv in every step
        # because Github actions doesn't preserve the environment
        run: . venv/bin/activate && pytest

      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .
      - name: Upload zip file artifact
        # uploads artifacts from your workflow allowing you to share data between jobs
        # Stores data once a workflow is complete
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://dhruvs3/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapiDeployment --s3-bucket dhruvs3 --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}